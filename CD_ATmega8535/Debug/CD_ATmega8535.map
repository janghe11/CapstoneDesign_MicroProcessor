Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8535.o (exit)
/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
                              ./sources/main.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                              ./sources/main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

KEY2                0x1               ./sources/main.o
KEY                 0x1               ./sources/set_doorlock.o
FLAG                0x1               ./sources/set_doorlock.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8535.o
LOAD ./sources/main.o
LOAD ./sources/set_doorlock.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x4de
 *(.vectors)
 .vectors       0x0000000000000000       0x2a /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8535.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000002a                . = ALIGN (0x2)
                0x000000000000002a                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000002a        0x0 linker stubs
 *(.trampolines*)
                0x000000000000002a                __trampolines_end = .
 *(.progmem*)
                0x000000000000002a                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000002a                __ctors_start = .
 *(.ctors)
                0x000000000000002a                __ctors_end = .
                0x000000000000002a                __dtors_start = .
 *(.dtors)
                0x000000000000002a                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000002a        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8535.o
                0x000000000000002a                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000002a        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8535.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000036       0x16 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
                0x0000000000000036                __do_copy_data
 .init4         0x000000000000004c       0x10 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                0x000000000000004c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000005c        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8535.o
 *(.init9)
 *(.text)
 .text          0x0000000000000060        0x2 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8535.o
                0x0000000000000060                __vector_1
                0x0000000000000060                __vector_12
                0x0000000000000060                __bad_interrupt
                0x0000000000000060                __vector_6
                0x0000000000000060                __vector_3
                0x0000000000000060                __vector_11
                0x0000000000000060                __vector_13
                0x0000000000000060                __vector_17
                0x0000000000000060                __vector_19
                0x0000000000000060                __vector_7
                0x0000000000000060                __vector_5
                0x0000000000000060                __vector_4
                0x0000000000000060                __vector_9
                0x0000000000000060                __vector_2
                0x0000000000000060                __vector_15
                0x0000000000000060                __vector_8
                0x0000000000000060                __vector_14
                0x0000000000000060                __vector_10
                0x0000000000000060                __vector_16
                0x0000000000000060                __vector_18
                0x0000000000000060                __vector_20
 .text          0x0000000000000062        0x0 ./sources/main.o
 .text          0x0000000000000062        0x0 ./sources/set_doorlock.o
 .text          0x0000000000000062        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000062        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000000062        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000062                . = ALIGN (0x2)
 *(.text.*)
 .text.valveMotor
                0x0000000000000062       0x12 ./sources/main.o
                0x0000000000000062                valveMotor
 .text.main     0x0000000000000074      0x230 ./sources/main.o
                0x0000000000000074                main
 .text.keyScan1
                0x00000000000002a4       0x8c ./sources/set_doorlock.o
                0x00000000000002a4                keyScan1
 .text.keyScan2
                0x0000000000000330       0x8e ./sources/set_doorlock.o
                0x0000000000000330                keyScan2
 .text.keyScan3
                0x00000000000003be       0x8e ./sources/set_doorlock.o
                0x00000000000003be                keyScan3
 .text.keyScan4
                0x000000000000044c       0x8e ./sources/set_doorlock.o
                0x000000000000044c                keyScan4
 .text.libgcc.mul
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                0x00000000000004da                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000004da        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                0x00000000000004da                exit
                0x00000000000004da                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000004da        0x4 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000004de                _etext = .

.data           0x0000000000800060       0x18 load address 0x00000000000004de
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8535.o
 .data          0x0000000000800060        0x0 ./sources/main.o
 .data          0x0000000000800060        0x0 ./sources/set_doorlock.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.password
                0x0000000000800060        0x4 ./sources/main.o
                0x0000000000800060                password
 .data.inputPassword
                0x0000000000800064        0x4 ./sources/main.o
                0x0000000000800064                inputPassword
 .data.KCODE    0x0000000000800068       0x10 ./sources/main.o
                0x0000000000800068                KCODE
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800078                . = ALIGN (0x2)
                0x0000000000800078                _edata = .
                0x0000000000800078                PROVIDE (__data_end, .)

.bss            0x0000000000800078        0x5
                0x0000000000800078                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800078        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8535.o
 .bss           0x0000000000800078        0x0 ./sources/main.o
 .bss           0x0000000000800078        0x0 ./sources/set_doorlock.o
 .bss           0x0000000000800078        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800078        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800078        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.correct   0x0000000000800078        0x2 ./sources/main.o
                0x0000000000800078                correct
 *(COMMON)
 COMMON         0x000000000080007a        0x1 ./sources/main.o
                0x000000000080007a                KEY2
 COMMON         0x000000000080007b        0x2 ./sources/set_doorlock.o
                0x000000000080007b                KEY
                0x000000000080007c                FLAG
                0x000000000080007d                PROVIDE (__bss_end, .)
                0x00000000000004de                __data_load_start = LOADADDR (.data)
                0x00000000000004f6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080007d        0x0
                0x000000000080007d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080007d                PROVIDE (__noinit_end, .)
                0x000000000080007d                _end = .
                0x000000000080007d                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0xf18
 *(.stab)
 .stab          0x0000000000000000      0x780 ./sources/main.o
 .stab          0x0000000000000780      0x798 ./sources/set_doorlock.o
                                        0x960 (size before relaxing)

.stabstr        0x0000000000000000      0xc80
 *(.stabstr)
 .stabstr       0x0000000000000000      0xc80 ./sources/main.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./sources/main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./sources/set_doorlock.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(CD_ATmega8535.elf elf32-avr)
LOAD linker stubs
